= It's a Twitter Search Library implemented using jQuery

== Why?

The most part of the jQuery Twitter plugins availiable on the internet, are made for search AND display the tweets

In the projects that I worked, that needed display the tweets, the layout for display the tweets was specific to the project, I could not to use the plugin's layout

The main idea of Twitter Search Library is only for tweets's search. You need to implement the layout for display the tweets

== What's the difference 

The availiable plugins on the internet use an ugly syntax to search

  $.twitter.search({from: 'pablocantero', text: 'hello+world', container: 'myDivId});

Twitter Search Library is DSL based

  var tweets = new Twitter.tweets();
  tweets.containing('hello').and('world').from('pablocantero).limit(4).all(function(data){ alert("It's a customized function to display the tweets");});

== The Twitter Search API

This plugin follow the Twitter Search API documentation

Twitter Search API Method: search
http://apiwiki.twitter.com/w/page/22554756/Twitter-Search-API-Method:-search

== Example

The full example is availiable on https://gist.github.com/758666

=== Import the JavaScript

  <script src="http://code.jquery.com/jquery-latest.js"></script>
  <script type="text/javascript" src="https://github.com/phstc/jquery-twitter/raw/master/src/jquery.twitter.js"></script>

=== Create success callback

This library is only for tweets's search, it does not display the tweets. You need to implement the layout for display the tweets

  /*
  Customized callback to show the tweets
  */
  var tweetsSuccessCallback = function(data){
  	var tweetsLi = '';
  	for(var i = 0; i < data.results.length; i++){
  		var tweet = data.results[i];
  		// Calculate how many hours ago was the tweet posted
  		// http://www.lupomontero.com/fetching-tweets-with-jquery-and-the-twitter-json-api/
  		var dateTweet = new Date(tweet.created_at);
  		var dateNow   = new Date();
  		var dateDiff  = dateNow - dateTweet;
  		var hours     = Math.round(dateDiff/(1000*60*60));
  		tweetsLi += '<li>';
  		tweetsLi += '      <dl>';
  		tweetsLi += '              <dt><img src="' + tweet.profile_image_url + '" /></dt>';
  		tweetsLi += '              <dd>';
  		tweetsLi += '                      <span><a href="http://twitter.com/' + tweet.from_user + '">' + tweet.from_user + '</a></span>';
  		tweetsLi += '                      <span>' + hours + ' hours ago</span></dd></dl>';
  		tweetsLi += '      <div>' + tweet.text + '</div>';
  		tweetsLi += '</li>';
  	}
  	$('#tweets').html('<ul>' + tweetsLi + '</ul>');
  }

=== Create error callback

Customized callback to display an error message
This callback is optional, the default error callback shows an alert(errorMessage)

  var tweetsErrorCallback = function(errorMessage, tweet){
    var msg = 'Oops! <a href="http://dev.twitter.com/pages/rate-limiting">Twitter Rate Limit Exceeded</a>';
    msg += 'Try again later or search <a href="http://twitter.com/search?q=' + tweet.toQuery() + '">directly on Twitter</a>';
    $('#tweets').html(msg);
  }

=== Create a search query

  var tweets = Twitter.tweets();
  tweets.containing('jquery.twitter').all(tweetsSuccessCallback, tweetsErrorCallback);

== Test

To execute the Test suite, just open jquery.twitter-test.html in your browser. The tests were developed with http://docs.jquery.com/Qunit

== Do you want to improve the jQuery Twitter Library

Youâ€™re welcome to make your contributions and send them as a pull request